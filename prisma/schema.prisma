// ============================================================================
// PRISMA SCHEMA CONFIGURATION
// ============================================================================
// 
// This file defines the database schema for VesuviaSearch, a train schedule
// application for the Circumvesuviana railway line between Naples and Sorrento.
//
// Database: SQLite for development, PostgreSQL for production
// ORM: Prisma
// 
// Models:
// - Station: Railway stations on the Circumvesuviana network
// - Train: Train schedules with timing and route information  
// - TrainStop: Intermediate stops along train routes
//
// Author: VesuviaSearch Team
// Version: 1.0.0
// ============================================================================

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_DATABASE_URL")
}

// ============================================================================
// STATION MODEL
// ============================================================================
// Represents railway stations on the Circumvesuviana network
// Each station has a unique code and can serve as start/end points or stops

model Station {
  id          Int         @id @default(autoincrement())
  name        String      // Human-readable station name (e.g., "Napoli Centrale")
  code        String      @unique // Unique station code (e.g., "NAP", "SOR")
  
  // Relations
  stops       TrainStop[] // Trains that stop at this station
  trainEnds   Train[]     @relation("EndStation")   // Trains ending at this station
  trainStarts Train[]     @relation("StartStation") // Trains starting from this station

  @@map("stations")
}

// ============================================================================
// TRAIN MODEL  
// ============================================================================
// Represents scheduled trains with route and timing information
// Includes support for different train categories and operating schedules

model Train {
  id                Int         @id @default(autoincrement())
  trainNumber       String?     @map("train_number")      // Optional train identifier
  direction         String      // Train direction in the EAV network (currently "NAPOLI" or "SORRENTO") 
  departureTime     String      @map("departure_time")    // HH:MM format
  operatingDays     String      @map("operating_days")    // When train operates
  isCampaniaExpress Boolean     @default(false) @map("is_campania_express") // Premium service flag
  category          String      @default("regionale")     // Train type/category
  startStationId    Int         @map("start_station_id")  // Starting station reference
  endStationId      Int         @map("end_station_id")    // Ending station reference
  
  // Relations
  stops             TrainStop[] // All stops along this train's route
  endStation        Station     @relation("EndStation", fields: [endStationId], references: [id])
  startStation      Station     @relation("StartStation", fields: [startStationId], references: [id])

  @@map("trains")
}

// ============================================================================
// TRAIN STOP MODEL
// ============================================================================
// Represents intermediate stops along a train's route
// Includes arrival/departure times and stop ordering

model TrainStop {
  id            Int     @id @default(autoincrement())
  trainId       Int     @map("train_id")         // Reference to train
  stationId     Int     @map("station_id")       // Reference to station
  arrivalTime   String? @map("arrival_time")     // HH:MM format, nullable for first stop
  departureTime String? @map("departure_time")   // HH:MM format, nullable for last stop  
  stopOrder     Int     @map("stop_order")       // Order of this stop in the route (1, 2, 3...)
  
  // Relations
  station       Station @relation(fields: [stationId], references: [id])
  train         Train   @relation(fields: [trainId], references: [id], onDelete: Cascade)

  @@map("train_stops")
}
